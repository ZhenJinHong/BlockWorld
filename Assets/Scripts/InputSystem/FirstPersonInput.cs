//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/InputSystem/FirstPersonInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace CatFramework.InputMiao
{
    public partial class @FirstPersonInput: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @FirstPersonInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""FirstPersonInput"",
    ""maps"": [
        {
            ""name"": ""PlayerInWorld"",
            ""id"": ""761e75dd-112a-4a94-ae11-b0b2e436bd8e"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""95ac0380-e104-42ae-af05-63b3f09e0157"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""f677d135-6dd1-4b98-af98-ac35fd91458d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScreenPoint"",
                    ""type"": ""Value"",
                    ""id"": ""74f942de-f859-46e6-b6d8-afe1fad2f446"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""30204244-1c6a-4354-9c12-8e34ee30e2a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondAction"",
                    ""type"": ""Button"",
                    ""id"": ""be6e33c7-ea22-4b09-84b9-6824cd66dbe6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""25e29ba1-a2a8-4251-8973-a6472f74925d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""16d828bc-63be-4942-9401-2786f271216a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""T"",
                    ""type"": ""Button"",
                    ""id"": ""e1992be0-8fc7-4c2a-b28b-587f335eb3b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fly"",
                    ""type"": ""Button"",
                    ""id"": ""cc30156e-ea77-4afa-b7c8-5c508b2eb985"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Z"",
                    ""type"": ""Button"",
                    ""id"": ""0b88e92f-470c-4f6b-a1d7-7d050c9077ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""95717795-a00e-4182-a2c4-1df2db2656d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""G"",
                    ""type"": ""Button"",
                    ""id"": ""f00269ab-7d80-4b83-9366-915243e9fa98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""ca4b8025-d50e-4b2e-91be-41bb20a92ed1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrouchOrFalling"",
                    ""type"": ""Button"",
                    ""id"": ""ffbc249f-fb38-4cb7-b465-fc5c80540ab9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""M"",
                    ""type"": ""Button"",
                    ""id"": ""2b9d4ec1-26a1-4da3-984e-b7fbfc0a60c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpOrElevated"",
                    ""type"": ""Button"",
                    ""id"": ""d9323d98-1efc-43b2-b492-58e3b2de79be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""98b87d24-f1df-485e-82c0-fc08acb57649"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""037850ce-bb6c-4a88-811f-79f6a1258aa3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fa8e1701-508e-42e7-b45a-9efd7c1d2ab4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""219384c7-cba2-40be-942c-6d96d5123bc1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c7e00b41-7c62-4988-8aa4-22c426f01e58"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""254791d1-c14c-43dd-ac71-7de991678359"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c245d553-aec2-4fc9-930f-1c08a400d215"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""889f6bcf-0fb5-4661-aec0-c05126483047"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b97b6c64-c0c1-4a8c-9d01-2017f2745f82"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cbf547ef-bfac-40b4-9531-4b194ab21164"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""17ad1088-a7ad-4b43-8e08-7b581f737158"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false)"",
                    ""groups"": ""PC"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ce25d7f-2f8b-4f4e-ae84-6588b325146c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""PrimaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79fd6932-5ea7-41c8-aa1b-86158428625c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SecondAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66bafb13-031c-4d5a-9714-2575f5d1c20e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ScreenPoint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a476bf67-cf16-435d-8db0-27cdeef0e110"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff3d9621-f7e8-41f5-876a-89931c56de0d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""704aef3c-3183-4e32-ace1-812f5a8eb11e"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""T"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6795189-51dd-4224-a1e8-6b34ed6b2500"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Fly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""407d290b-947d-41a5-900c-23ef4a4dfd92"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Z"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e5e0824-292e-4ce4-bee3-859df15744ad"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f36b0208-3d8c-4d99-a17b-4c9b7c23e686"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""G"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e39fe891-a931-420e-9618-59ae3cc4aa3e"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d6be492-18ee-493a-827b-4f0aa39fd030"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""CrouchOrFalling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51be6b2c-e900-49ca-bdde-8412e3760b27"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""M"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a689a55e-1170-4c13-8eac-08dbf81e26b5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""JumpOrElevated"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e9f6c2a-748b-4ebd-9148-d5fb14e7ec34"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // PlayerInWorld
            m_PlayerInWorld = asset.FindActionMap("PlayerInWorld", throwIfNotFound: true);
            m_PlayerInWorld_Move = m_PlayerInWorld.FindAction("Move", throwIfNotFound: true);
            m_PlayerInWorld_Look = m_PlayerInWorld.FindAction("Look", throwIfNotFound: true);
            m_PlayerInWorld_ScreenPoint = m_PlayerInWorld.FindAction("ScreenPoint", throwIfNotFound: true);
            m_PlayerInWorld_PrimaryAction = m_PlayerInWorld.FindAction("PrimaryAction", throwIfNotFound: true);
            m_PlayerInWorld_SecondAction = m_PlayerInWorld.FindAction("SecondAction", throwIfNotFound: true);
            m_PlayerInWorld_Q = m_PlayerInWorld.FindAction("Q", throwIfNotFound: true);
            m_PlayerInWorld_R = m_PlayerInWorld.FindAction("R", throwIfNotFound: true);
            m_PlayerInWorld_T = m_PlayerInWorld.FindAction("T", throwIfNotFound: true);
            m_PlayerInWorld_Fly = m_PlayerInWorld.FindAction("Fly", throwIfNotFound: true);
            m_PlayerInWorld_Z = m_PlayerInWorld.FindAction("Z", throwIfNotFound: true);
            m_PlayerInWorld_X = m_PlayerInWorld.FindAction("X", throwIfNotFound: true);
            m_PlayerInWorld_G = m_PlayerInWorld.FindAction("G", throwIfNotFound: true);
            m_PlayerInWorld_B = m_PlayerInWorld.FindAction("B", throwIfNotFound: true);
            m_PlayerInWorld_CrouchOrFalling = m_PlayerInWorld.FindAction("CrouchOrFalling", throwIfNotFound: true);
            m_PlayerInWorld_M = m_PlayerInWorld.FindAction("M", throwIfNotFound: true);
            m_PlayerInWorld_JumpOrElevated = m_PlayerInWorld.FindAction("JumpOrElevated", throwIfNotFound: true);
            m_PlayerInWorld_Sprint = m_PlayerInWorld.FindAction("Sprint", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // PlayerInWorld
        private readonly InputActionMap m_PlayerInWorld;
        private List<IPlayerInWorldActions> m_PlayerInWorldActionsCallbackInterfaces = new List<IPlayerInWorldActions>();
        private readonly InputAction m_PlayerInWorld_Move;
        private readonly InputAction m_PlayerInWorld_Look;
        private readonly InputAction m_PlayerInWorld_ScreenPoint;
        private readonly InputAction m_PlayerInWorld_PrimaryAction;
        private readonly InputAction m_PlayerInWorld_SecondAction;
        private readonly InputAction m_PlayerInWorld_Q;
        private readonly InputAction m_PlayerInWorld_R;
        private readonly InputAction m_PlayerInWorld_T;
        private readonly InputAction m_PlayerInWorld_Fly;
        private readonly InputAction m_PlayerInWorld_Z;
        private readonly InputAction m_PlayerInWorld_X;
        private readonly InputAction m_PlayerInWorld_G;
        private readonly InputAction m_PlayerInWorld_B;
        private readonly InputAction m_PlayerInWorld_CrouchOrFalling;
        private readonly InputAction m_PlayerInWorld_M;
        private readonly InputAction m_PlayerInWorld_JumpOrElevated;
        private readonly InputAction m_PlayerInWorld_Sprint;
        public struct PlayerInWorldActions
        {
            private @FirstPersonInput m_Wrapper;
            public PlayerInWorldActions(@FirstPersonInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_PlayerInWorld_Move;
            public InputAction @Look => m_Wrapper.m_PlayerInWorld_Look;
            public InputAction @ScreenPoint => m_Wrapper.m_PlayerInWorld_ScreenPoint;
            public InputAction @PrimaryAction => m_Wrapper.m_PlayerInWorld_PrimaryAction;
            public InputAction @SecondAction => m_Wrapper.m_PlayerInWorld_SecondAction;
            public InputAction @Q => m_Wrapper.m_PlayerInWorld_Q;
            public InputAction @R => m_Wrapper.m_PlayerInWorld_R;
            public InputAction @T => m_Wrapper.m_PlayerInWorld_T;
            public InputAction @Fly => m_Wrapper.m_PlayerInWorld_Fly;
            public InputAction @Z => m_Wrapper.m_PlayerInWorld_Z;
            public InputAction @X => m_Wrapper.m_PlayerInWorld_X;
            public InputAction @G => m_Wrapper.m_PlayerInWorld_G;
            public InputAction @B => m_Wrapper.m_PlayerInWorld_B;
            public InputAction @CrouchOrFalling => m_Wrapper.m_PlayerInWorld_CrouchOrFalling;
            public InputAction @M => m_Wrapper.m_PlayerInWorld_M;
            public InputAction @JumpOrElevated => m_Wrapper.m_PlayerInWorld_JumpOrElevated;
            public InputAction @Sprint => m_Wrapper.m_PlayerInWorld_Sprint;
            public InputActionMap Get() { return m_Wrapper.m_PlayerInWorld; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerInWorldActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerInWorldActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerInWorldActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerInWorldActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @ScreenPoint.started += instance.OnScreenPoint;
                @ScreenPoint.performed += instance.OnScreenPoint;
                @ScreenPoint.canceled += instance.OnScreenPoint;
                @PrimaryAction.started += instance.OnPrimaryAction;
                @PrimaryAction.performed += instance.OnPrimaryAction;
                @PrimaryAction.canceled += instance.OnPrimaryAction;
                @SecondAction.started += instance.OnSecondAction;
                @SecondAction.performed += instance.OnSecondAction;
                @SecondAction.canceled += instance.OnSecondAction;
                @Q.started += instance.OnQ;
                @Q.performed += instance.OnQ;
                @Q.canceled += instance.OnQ;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @T.started += instance.OnT;
                @T.performed += instance.OnT;
                @T.canceled += instance.OnT;
                @Fly.started += instance.OnFly;
                @Fly.performed += instance.OnFly;
                @Fly.canceled += instance.OnFly;
                @Z.started += instance.OnZ;
                @Z.performed += instance.OnZ;
                @Z.canceled += instance.OnZ;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @G.started += instance.OnG;
                @G.performed += instance.OnG;
                @G.canceled += instance.OnG;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @CrouchOrFalling.started += instance.OnCrouchOrFalling;
                @CrouchOrFalling.performed += instance.OnCrouchOrFalling;
                @CrouchOrFalling.canceled += instance.OnCrouchOrFalling;
                @M.started += instance.OnM;
                @M.performed += instance.OnM;
                @M.canceled += instance.OnM;
                @JumpOrElevated.started += instance.OnJumpOrElevated;
                @JumpOrElevated.performed += instance.OnJumpOrElevated;
                @JumpOrElevated.canceled += instance.OnJumpOrElevated;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
            }

            private void UnregisterCallbacks(IPlayerInWorldActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Look.started -= instance.OnLook;
                @Look.performed -= instance.OnLook;
                @Look.canceled -= instance.OnLook;
                @ScreenPoint.started -= instance.OnScreenPoint;
                @ScreenPoint.performed -= instance.OnScreenPoint;
                @ScreenPoint.canceled -= instance.OnScreenPoint;
                @PrimaryAction.started -= instance.OnPrimaryAction;
                @PrimaryAction.performed -= instance.OnPrimaryAction;
                @PrimaryAction.canceled -= instance.OnPrimaryAction;
                @SecondAction.started -= instance.OnSecondAction;
                @SecondAction.performed -= instance.OnSecondAction;
                @SecondAction.canceled -= instance.OnSecondAction;
                @Q.started -= instance.OnQ;
                @Q.performed -= instance.OnQ;
                @Q.canceled -= instance.OnQ;
                @R.started -= instance.OnR;
                @R.performed -= instance.OnR;
                @R.canceled -= instance.OnR;
                @T.started -= instance.OnT;
                @T.performed -= instance.OnT;
                @T.canceled -= instance.OnT;
                @Fly.started -= instance.OnFly;
                @Fly.performed -= instance.OnFly;
                @Fly.canceled -= instance.OnFly;
                @Z.started -= instance.OnZ;
                @Z.performed -= instance.OnZ;
                @Z.canceled -= instance.OnZ;
                @X.started -= instance.OnX;
                @X.performed -= instance.OnX;
                @X.canceled -= instance.OnX;
                @G.started -= instance.OnG;
                @G.performed -= instance.OnG;
                @G.canceled -= instance.OnG;
                @B.started -= instance.OnB;
                @B.performed -= instance.OnB;
                @B.canceled -= instance.OnB;
                @CrouchOrFalling.started -= instance.OnCrouchOrFalling;
                @CrouchOrFalling.performed -= instance.OnCrouchOrFalling;
                @CrouchOrFalling.canceled -= instance.OnCrouchOrFalling;
                @M.started -= instance.OnM;
                @M.performed -= instance.OnM;
                @M.canceled -= instance.OnM;
                @JumpOrElevated.started -= instance.OnJumpOrElevated;
                @JumpOrElevated.performed -= instance.OnJumpOrElevated;
                @JumpOrElevated.canceled -= instance.OnJumpOrElevated;
                @Sprint.started -= instance.OnSprint;
                @Sprint.performed -= instance.OnSprint;
                @Sprint.canceled -= instance.OnSprint;
            }

            public void RemoveCallbacks(IPlayerInWorldActions instance)
            {
                if (m_Wrapper.m_PlayerInWorldActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerInWorldActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerInWorldActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerInWorldActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerInWorldActions @PlayerInWorld => new PlayerInWorldActions(this);
        private int m_PCSchemeIndex = -1;
        public InputControlScheme PCScheme
        {
            get
            {
                if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
                return asset.controlSchemes[m_PCSchemeIndex];
            }
        }
        public interface IPlayerInWorldActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnScreenPoint(InputAction.CallbackContext context);
            void OnPrimaryAction(InputAction.CallbackContext context);
            void OnSecondAction(InputAction.CallbackContext context);
            void OnQ(InputAction.CallbackContext context);
            void OnR(InputAction.CallbackContext context);
            void OnT(InputAction.CallbackContext context);
            void OnFly(InputAction.CallbackContext context);
            void OnZ(InputAction.CallbackContext context);
            void OnX(InputAction.CallbackContext context);
            void OnG(InputAction.CallbackContext context);
            void OnB(InputAction.CallbackContext context);
            void OnCrouchOrFalling(InputAction.CallbackContext context);
            void OnM(InputAction.CallbackContext context);
            void OnJumpOrElevated(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
        }
    }
}
